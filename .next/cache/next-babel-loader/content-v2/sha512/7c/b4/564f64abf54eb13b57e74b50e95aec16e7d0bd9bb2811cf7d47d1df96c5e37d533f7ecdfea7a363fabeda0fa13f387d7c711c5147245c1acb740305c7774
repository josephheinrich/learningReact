{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\jheinrich\\\\Desktop\\\\learningReact\\\\src\\\\components\\\\CryptoCard\\\\CryptoCard.js\";\nimport React from 'react';\nimport CryptoRenderProps from './CryptoRenderProps';\nimport Loader from 'react-loader-spinner';\n\nconst CryptoCard = () => {\n  return /*#__PURE__*/_jsxDEV(CryptoRenderProps, {\n    children: ({\n      rows,\n      isLoading\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow overflow-y-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap justify-center sm:flex\",\n          children: rows.map(({\n            base,\n            currency,\n            amount\n          }, i) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"m-4 w-40 sm:w-44 md:w-48 justify-items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"rounded shadow-md overflow-hidden\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      alt: \"\",\n                      className: \"bg-green-900 h-40 object-cover\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 19,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bg-white m-2\",\n                      children: isLoading === true ? /*#__PURE__*/_jsxDEV(Loader, {\n                        type: \"ThreeDots\",\n                        color: \"#064e3b\",\n                        height: 40,\n                        width: 40\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 22,\n                        columnNumber: 65\n                      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-xl block font-light\",\n                          children: base\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 25,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-lg font-bold text-green-900\",\n                          children: amount\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 26,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"ml-1 text-gray-700\",\n                          children: currency\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 26,\n                          columnNumber: 131\n                        }, this)]\n                      }, void 0, true)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 20,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 18,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 17,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 41\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 21\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\nexport default CryptoCard;","map":{"version":3,"sources":["C:/Users/jheinrich/Desktop/learningReact/src/components/CryptoCard/CryptoCard.js"],"names":["React","CryptoRenderProps","Loader","CryptoCard","rows","isLoading","map","base","currency","amount","i"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,sBACI,QAAC,iBAAD;AAAA,cACK,CAAC;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAAD,KAAuB;AACpB,0BACI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,uCAAf;AAAA,oBACKD,IAAI,CAACE,GAAL,CAAS,CAAC;AAACC,YAAAA,IAAD;AAAOC,YAAAA,QAAP;AAAiBC,YAAAA;AAAjB,WAAD,EAA2BC,CAA3B,KAAiC;AACvC,gCACI;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,+CAAf;AAAA,uCACI;AAAK,kBAAA,SAAS,EAAC,mCAAf;AAAA,yCACI;AAAA,4CACI;AAAK,sBAAA,GAAG,EAAC,EAAT;AAAY,sBAAA,SAAS,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAK,sBAAA,SAAS,EAAC,cAAf;AAAA,gCACKL,SAAS,KAAK,IAAd,gBACO,QAAC,MAAD;AAAQ,wBAAA,IAAI,EAAC,WAAb;AAAyB,wBAAA,KAAK,EAAC,SAA/B;AAAyC,wBAAA,MAAM,EAAE,EAAjD;AAAqD,wBAAA,KAAK,EAAE;AAA5D;AAAA;AAAA;AAAA;AAAA,8BADP,gBAGG;AAAA,gDACI;AAAM,0BAAA,SAAS,EAAC,0BAAhB;AAAA,oCAA4CE;AAA5C;AAAA;AAAA;AAAA;AAAA,gCADJ,eAEI;AAAM,0BAAA,SAAS,EAAC,kCAAhB;AAAA,oCAAoDE;AAApD;AAAA;AAAA;AAAA;AAAA,gCAFJ,eAEsE;AAAM,0BAAA,SAAS,EAAC,oBAAhB;AAAA,oCAAsCD;AAAtC;AAAA;AAAA;AAAA;AAAA,gCAFtE;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,eAAUE,CAAV;AAAA;AAAA;AAAA;AAAA,oBADJ;AAqBH,WAtBA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AA6BH;AA/BL;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH,CApCD;;AAsCA,eAAeP,UAAf","sourcesContent":["\r\nimport React from 'react';\r\nimport CryptoRenderProps from './CryptoRenderProps';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst CryptoCard = () => {\r\n    return (\r\n        <CryptoRenderProps>\r\n            {({rows, isLoading}) => {\r\n                return (   \r\n                    <div className=\"flex-grow overflow-y-auto\">\r\n                        <div className=\"flex flex-wrap justify-center sm:flex\">\r\n                            {rows.map(({base, currency, amount}, i) => {\r\n                                return (\r\n                                    <div key={i}>\r\n                                        <div className=\"m-4 w-40 sm:w-44 md:w-48 justify-items-center\">\r\n                                            <div className=\"rounded shadow-md overflow-hidden\">\r\n                                                <div>\r\n                                                    <div alt=\"\" className=\"bg-green-900 h-40 object-cover\"/>\r\n                                                    <div className=\"bg-white m-2\">\r\n                                                        {isLoading === true ? (\r\n                                                                <Loader type=\"ThreeDots\" color=\"#064e3b\" height={40} width={40} />\r\n                                                            ) : (\r\n                                                            <>\r\n                                                                <span className=\"text-xl block font-light\">{base}</span>\r\n                                                                <span className=\"text-lg font-bold text-green-900\">{amount}</span><span className=\"ml-1 text-gray-700\">{currency}</span>\r\n                                                            </>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }}\r\n        </CryptoRenderProps>\r\n    )\r\n}\r\n\r\nexport default CryptoCard;"]},"metadata":{},"sourceType":"module"}