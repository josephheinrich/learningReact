{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\jheinrich\\\\Desktop\\\\learningReact\\\\src\\\\components\\\\CryptoCard_V2\\\\CryptoCard_V2.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst CryptoCard_V2 = () => {\n  var value = \"\";\n\n  function updateCryptoState() {\n    setCryptoData(...cryptoData, value);\n  }\n\n  const {\n    0: cryptoData,\n    1: setCryptoData\n  } = useState({\n    btcData: [],\n    ethData: [],\n    bchData: []\n  });\n  const {\n    0: cryptoInfo,\n    1: setCryptoInfo\n  } = useState([]);\n\n  const fetchData = () => {\n    const btcURL = \"https://api.coinbase.com/v2/prices/BTC-USD/buy\";\n    const ethURL = \"https://api.coinbase.com/v2/prices/ETH-USD/buy\";\n    const bchURL = \"https://api.coinbase.com/v2/prices/BCH-USD/buy\";\n    Promise.all([axios.get(btcURL), axios.get(ethURL), axios.get(bchURL)]).then(results => {\n      setCryptoData({\n        btcData: results[0].data.data,\n        ethData: results[1].data.data,\n        bchData: results[2].data.data\n      });\n      setCryptoInfo([results[0].data.data, results[1].data.data, results[2].data.data]);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  var keys = Object.keys(cryptoData);\n  var rows = [];\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    rows.push(cryptoData[key]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap justify-center items-center mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Crypto: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"border-2 border-gray-500 rounded\",\n          id: \"cryptoInput\",\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"bg-blue-400 text-white rounded p-1 w-16 ml-4\",\n          onClick: updateCryptoState,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow overflow-y-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap justify-center sm:flex\",\n        children: rows.map(({\n          base,\n          currency,\n          amount\n        }, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"m-4 w-40 sm:w-44 md:w-48 justify-items-center\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rounded shadow-md overflow-hidden\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    alt: \"\",\n                    className: \"bg-green-900 h-40 object-cover\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-white m-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-xl block font-light\",\n                      children: base\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-lg font-bold text-green-900\",\n                      children: amount\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"ml-1 text-gray-700\",\n                      children: currency\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 115\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\nexport default CryptoCard_V2;","map":{"version":3,"sources":["C:/Users/jheinrich/Desktop/learningReact/src/components/CryptoCard_V2/CryptoCard_V2.js"],"names":["React","useState","useEffect","axios","CryptoCard_V2","value","updateCryptoState","setCryptoData","cryptoData","btcData","ethData","bchData","cryptoInfo","setCryptoInfo","fetchData","btcURL","ethURL","bchURL","Promise","all","get","then","results","data","catch","err","console","log","keys","Object","rows","i","length","key","push","map","base","currency","amount"],"mappings":"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","sourcesContent":["\r\nimport React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CryptoCard_V2 = () => {\r\n    var value = \"\";\r\n    function updateCryptoState() {\r\n        setCryptoData(...cryptoData, value);\r\n    }\r\n\r\n    const [cryptoData, setCryptoData] = useState({\r\n        btcData: [],\r\n        ethData: [],\r\n        bchData: []\r\n    });\r\n\r\n    const [cryptoInfo, setCryptoInfo] = useState([]);\r\n\r\n    const fetchData = () => {\r\n        const btcURL = \"https://api.coinbase.com/v2/prices/BTC-USD/buy\";\r\n        const ethURL = \"https://api.coinbase.com/v2/prices/ETH-USD/buy\";\r\n        const bchURL = \"https://api.coinbase.com/v2/prices/BCH-USD/buy\";\r\n\r\n        Promise.all([\r\n            axios.get(btcURL),\r\n            axios.get(ethURL),\r\n            axios.get(bchURL)\r\n        ]).then((results) => {\r\n            setCryptoData({\r\n                btcData: results[0].data.data,\r\n                ethData: results[1].data.data,\r\n                bchData: results[2].data.data\r\n            });\r\n            setCryptoInfo([results[0].data.data, results[1].data.data, results[2].data.data]);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [])\r\n\r\n    var keys = Object.keys(cryptoData);\r\n    var rows = [];\r\n\r\n    for (var i = 0; i < keys.length; i++) { \r\n        var key = (keys[i]);\r\n        rows.push(cryptoData[key]);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"flex flex-wrap justify-center items-center mt-4\">\r\n                <div>\r\n                    Crypto: <input type=\"text\" className=\"border-2 border-gray-500 rounded\" id=\"cryptoInput\" value={value}/>\r\n                </div>\r\n                <div>\r\n                    <button type=\"button\" className=\"bg-blue-400 text-white rounded p-1 w-16 ml-4\" onClick={updateCryptoState}>Add</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex-grow overflow-y-auto\">\r\n                <div className=\"flex flex-wrap justify-center sm:flex\">\r\n                    {rows.map(({base, currency, amount}, i) => {\r\n                        return (\r\n                            <div key={i}>\r\n                                <div className=\"m-4 w-40 sm:w-44 md:w-48 justify-items-center\">\r\n                                    <div className=\"rounded shadow-md overflow-hidden\">\r\n                                        <div>\r\n                                            <div alt=\"\" className=\"bg-green-900 h-40 object-cover\"/>\r\n                                            <div className=\"bg-white m-2\">\r\n                                                <span className=\"text-xl block font-light\">{base}</span>\r\n                                                <span className=\"text-lg font-bold text-green-900\">{amount}</span><span className=\"ml-1 text-gray-700\">{currency}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CryptoCard_V2;"]},"metadata":{},"sourceType":"module"}