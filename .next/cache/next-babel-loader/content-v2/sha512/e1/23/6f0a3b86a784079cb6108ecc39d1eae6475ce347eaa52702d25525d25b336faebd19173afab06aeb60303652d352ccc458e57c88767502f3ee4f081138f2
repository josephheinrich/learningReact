{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction WeatherRenderProps(props) {\n  _s();\n\n  var weatherAPIKey = \"1862033e825e661a5f9d18c2ede377cb\";\n  var weatherURL = \"http://api.openweathermap.org/data/2.5/weather?zip=47401&appid=\" + weatherAPIKey;\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsloading = _useState[1];\n\n  var _useState2 = useState({\n    bloomingtonWthr: [],\n    louisvilleWthr: [],\n    pasadenaWthr: []\n  }),\n      wthr = _useState2[0],\n      setWthr = _useState2[1];\n\n  var _useState3 = useState({}),\n      cityData = _useState3[0],\n      setCityData = _useState3[1];\n\n  var fetchData = function fetchData() {\n    var bloomingtonURL = \"http://api.openweathermap.org/data/2.5/weather?zip=47401&appid=\" + weatherAPIKey;\n    var louisvilleURL = \"http://api.openweathermap.org/data/2.5/weather?zip=40202&appid=\" + weatherAPIKey;\n    var pasadenaURL = \"http://api.openweathermap.org/data/2.5/weather?zip=91001&appid=\" + weatherAPIKey;\n    Promise.all([axios.get(bloomingtonURL), axios.get(louisvilleURL), axios.get(pasadenaURL)]).then(function (results) {\n      setWthr({\n        bloomingtonWthr: results[0].data.main,\n        louisvilleWthr: results[1].data.main,\n        pasadenaWthr: results[2].data.main\n      });\n      setIsloading(false);\n      setCityData(results);\n    })[\"catch\"](function (err) {\n      setIsloading(true);\n      console.log(err);\n    });\n  };\n\n  useEffect(function () {\n    setIsloading(true);\n    fetchData();\n  }, []);\n  var keys = Object.keys(wthr);\n  var rows = [];\n  var names = [];\n  var weatherCondition = [];\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    rows.push(wthr[key]);\n  }\n\n  for (var i = 0; i < cityData.length; i++) {\n    names.push(cityData[i].data.name);\n    weatherCondition.push(cityData[i].data.weather[0].description);\n  }\n\n  return props.children({\n    rows: rows,\n    names: names,\n    weatherCondition: weatherCondition\n  });\n}\n\n_s(WeatherRenderProps, \"/jPUzcac3am//JCevgCje2STG3c=\");\n\n_c = WeatherRenderProps;\nexport default WeatherRenderProps;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherRenderProps\");","map":{"version":3,"sources":["C:/Users/jheinrich/Desktop/learningReact/src/components/WeatherCard/WeatherRenderProps.js"],"names":["useState","useEffect","axios","WeatherRenderProps","props","weatherAPIKey","weatherURL","isLoading","setIsloading","bloomingtonWthr","louisvilleWthr","pasadenaWthr","wthr","setWthr","cityData","setCityData","fetchData","bloomingtonURL","louisvilleURL","pasadenaURL","Promise","all","get","then","results","data","main","err","console","log","keys","Object","rows","names","weatherCondition","i","length","key","push","name","weather","description","children"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction WeatherRenderProps(props) {\r\n    const weatherAPIKey = \"1862033e825e661a5f9d18c2ede377cb\";\r\n    const weatherURL = \"http://api.openweathermap.org/data/2.5/weather?zip=47401&appid=\" + weatherAPIKey;\r\n\r\n    const [isLoading, setIsloading] = useState(false);\r\n    const [wthr, setWthr] = useState({\r\n        bloomingtonWthr: [],\r\n        louisvilleWthr: [],\r\n        pasadenaWthr: []\r\n    })\r\n\r\n    const [cityData, setCityData] = useState({});\r\n\r\n    const fetchData = () => {\r\n        const bloomingtonURL = \"http://api.openweathermap.org/data/2.5/weather?zip=47401&appid=\" + weatherAPIKey;\r\n        const louisvilleURL = \"http://api.openweathermap.org/data/2.5/weather?zip=40202&appid=\" + weatherAPIKey;\r\n        const pasadenaURL = \"http://api.openweathermap.org/data/2.5/weather?zip=91001&appid=\" + weatherAPIKey;\r\n\r\n        Promise.all([\r\n            axios.get(bloomingtonURL),\r\n            axios.get(louisvilleURL),\r\n            axios.get(pasadenaURL)\r\n        ]).then((results) => {       \r\n            setWthr({\r\n              bloomingtonWthr: results[0].data.main,\r\n              louisvilleWthr: results[1].data.main,\r\n              pasadenaWthr: results[2].data.main\r\n            });\r\n\r\n            setIsloading(false);\r\n\r\n            setCityData(results);\r\n              \r\n          })\r\n          .catch((err) => {\r\n            setIsloading(true);\r\n            console.log(err);\r\n          });\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsloading(true);\r\n        fetchData();\r\n    }, [])\r\n\r\n\r\n    var keys = Object.keys(wthr);\r\n    var rows = [];\r\n    var names = [];\r\n    var weatherCondition = [];\r\n\r\n    for (var i = 0; i < keys.length; i++) { \r\n        var key = (keys[i]);\r\n        rows.push(wthr[key]);\r\n    }\r\n\r\n    for (var i = 0; i < cityData.length; i++) {\r\n        names.push(cityData[i].data.name);\r\n        weatherCondition.push(cityData[i].data.weather[0].description);\r\n    }\r\n\r\n    return props.children({\r\n        rows: rows,\r\n        names: names,\r\n        weatherCondition: weatherCondition\r\n    });\r\n}\r\n\r\nexport default WeatherRenderProps;"]},"metadata":{},"sourceType":"module"}