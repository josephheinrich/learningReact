{"ast":null,"code":"const utils = {\n  KToF: function KToF(temperature) {\n    var F = 0;\n    F = Math.round((temperature - 273.15) * 9 / 5 + 32);\n    return F;\n  },\n  sum: arr => arr.reduce((acc, curr) => acc + curr, 0),\n  // create an array of numbers between min and max (edges included)\n  range: (min, max) => Array.from({\n    length: max - min + 1\n  }, (_, i) => min + i),\n  // pick a random number between min and max (edges included)\n  random: (min, max) => min + Math.floor(Math.random() * (max - min + 1)),\n  // Given an array of numbers and a max...\n  // Pick a random sum (< max) from the set of all available sums in arr\n  randomSumIn: (arr, max) => {\n    const sets = [[]];\n    const sums = [];\n\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = 0, len = sets.length; j < len; j++) {\n        const candidateSet = sets[j].concat(arr[i]);\n        const candidateSum = utils.sum(candidateSet);\n\n        if (candidateSum <= max) {\n          sets.push(candidateSet);\n          sums.push(candidateSum);\n        }\n      }\n    }\n\n    return sums[utils.random(0, sums.length - 1)];\n  }\n};\nexport default utils;","map":{"version":3,"sources":["C:/Users/jheinrich/Desktop/learningReact/utilities/utils.js"],"names":["utils","KToF","temperature","F","Math","round","sum","arr","reduce","acc","curr","range","min","max","Array","from","length","_","i","random","floor","randomSumIn","sets","sums","j","len","candidateSet","concat","candidateSum","push"],"mappings":"AAAA,MAAMA,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcC,WAAd,EAA2B;AAC7B,QAAIC,CAAC,GAAG,CAAR;AACAA,IAAAA,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAa,CAACH,WAAW,GAAG,MAAf,IAAuB,CAAxB,GAA2B,CAA5B,GAAiC,EAA5C,CAAJ;AACA,WAAOC,CAAP;AACH,GALS;AAMVG,EAAAA,GAAG,EAAEC,GAAG,IAAIA,GAAG,CAACC,MAAJ,CAAW,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,GAAGC,IAAhC,EAAsC,CAAtC,CANF;AAQV;AACAC,EAAAA,KAAK,EAAE,CAACC,GAAD,EAAMC,GAAN,KAAcC,KAAK,CAACC,IAAN,CAAW;AAAEC,IAAAA,MAAM,EAAEH,GAAG,GAAGD,GAAN,GAAY;AAAtB,GAAX,EAAsC,CAACK,CAAD,EAAIC,CAAJ,KAAUN,GAAG,GAAGM,CAAtD,CATX;AAWV;AACAC,EAAAA,MAAM,EAAE,CAACP,GAAD,EAAMC,GAAN,KAAcD,GAAG,GAAGR,IAAI,CAACgB,KAAL,CAAWhB,IAAI,CAACe,MAAL,MAAiBN,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,CAZlB;AAcV;AACA;AACAS,EAAAA,WAAW,EAAE,CAACd,GAAD,EAAMM,GAAN,KAAc;AACzB,UAAMS,IAAI,GAAG,CAAC,EAAD,CAAb;AACA,UAAMC,IAAI,GAAG,EAAb;;AACA,SAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,GAAG,CAACS,MAAxB,EAAgCE,CAAC,EAAjC,EAAqC;AACnC,WAAK,IAAIM,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGH,IAAI,CAACN,MAA3B,EAAmCQ,CAAC,GAAGC,GAAvC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/C,cAAME,YAAY,GAAGJ,IAAI,CAACE,CAAD,CAAJ,CAAQG,MAAR,CAAepB,GAAG,CAACW,CAAD,CAAlB,CAArB;AACA,cAAMU,YAAY,GAAG5B,KAAK,CAACM,GAAN,CAAUoB,YAAV,CAArB;;AACA,YAAIE,YAAY,IAAIf,GAApB,EAAyB;AACvBS,UAAAA,IAAI,CAACO,IAAL,CAAUH,YAAV;AACAH,UAAAA,IAAI,CAACM,IAAL,CAAUD,YAAV;AACD;AACF;AACF;;AACD,WAAOL,IAAI,CAACvB,KAAK,CAACmB,MAAN,CAAa,CAAb,EAAgBI,IAAI,CAACP,MAAL,GAAc,CAA9B,CAAD,CAAX;AACD;AA9BS,CAAd;AAiCA,eAAehB,KAAf","sourcesContent":["const utils = {\r\n    KToF: function KToF(temperature) {\r\n        var F = 0;\r\n        F = Math.round((((temperature - 273.15)*9)/5) + 32);\r\n        return F;\r\n    }, \r\n    sum: arr => arr.reduce((acc, curr) => acc + curr, 0),\r\n  \r\n    // create an array of numbers between min and max (edges included)\r\n    range: (min, max) => Array.from({ length: max - min + 1 }, (_, i) => min + i),\r\n  \r\n    // pick a random number between min and max (edges included)\r\n    random: (min, max) => min + Math.floor(Math.random() * (max - min + 1)),\r\n  \r\n    // Given an array of numbers and a max...\r\n    // Pick a random sum (< max) from the set of all available sums in arr\r\n    randomSumIn: (arr, max) => {\r\n      const sets = [[]];\r\n      const sums = [];\r\n      for (let i = 0; i < arr.length; i++) {\r\n        for (let j = 0, len = sets.length; j < len; j++) {\r\n          const candidateSet = sets[j].concat(arr[i]);\r\n          const candidateSum = utils.sum(candidateSet);\r\n          if (candidateSum <= max) {\r\n            sets.push(candidateSet);\r\n            sums.push(candidateSum);\r\n          }\r\n        }\r\n      }\r\n      return sums[utils.random(0, sums.length - 1)];\r\n    },\r\n}\r\n\r\nexport default utils;"]},"metadata":{},"sourceType":"module"}